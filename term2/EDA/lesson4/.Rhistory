getwd()
setwd("/Users/geodev/code/daan-nano/term2/EDA/lesson4/")
list.files()
install.packages("tidyr")
install.packages("dplyr")
library(ggplot2)
library(tidyr)
library(dplyr)
library(readxl)
library(gridExtra)
library(grid)
# define path name
fileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(fileName)
head(bdays_raw)
bdays_raw <- read.csv(fileName)
str(bdays_raw)
names(bdays_raw)
typeof(bdays_raw)
typeof(bdays_raw[2])
typeof(bdays_raw[1])
typeof(bdays_raw[1][1])
typeof(bdays_raw[1][2])
summarise(bdays_raw)
bdays_raw
# define path name
fileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(fileName)
head(bdays_raw)
str(bdays_raw)
bdays_edt <- as.Date(bdays_raw, format = "%m/%d/%y")
head(bdays_edt)
bdays_edt <- as.Date(bdays_raw, format = "%m/%d/%y")
bdays_edt <- as.Date(bdays_raw[1], format = "%m/%d/%y")
head(bdays_edt)
bdays_edt <- as.Date(bdays_raw$dates, format = "%m/%d/%y")
head(bdays_edt)
View(bdays_raw)
head(bdays_edt)
qplot(bdays_edt)
summary(bdays_edt)
library(data.table)
install.packages("data.table")
library(data.table)
bdays_edt[, .N, by=year(Date)]
bdays_edt[, .N, by=year(date)]
typeof(bdays_edt)
bdays_edt[, .N, by=year(date)]
install.packages("lubridate")
library(lubridate)
?lubridate
parse_date_time(bdays_edt$date, "mdy")
parse_date_time(bdays_edt, "mdy")
parse_date_time(bdays_edt, "ymd")
bdays_edt <- parse_date_time(bdays_edt, "ymd")
year(bdays_edt)
month(bdays_edt)
year_bdays <- year(bdays_edt)
month_bdays <- month(bdays_edt)
day_bdays <- day(bdays_edt)
summary(month_bdays)
summary(day_bdays)
count(month_bdays)
bdays_edt <- parse_date_time(bdays_edt, "ymd")
year_bdays <- year(bdays_edt)
month_bdays <- month(bdays_edt)
day_bdays <- day(bdays_edt)
qplot(day_bdays)
View(bdays_raw)
View(bdays_raw)
bdays_edt %>% group_by(month=floor_date(date, "month")) %>%
summarize(dates=sum(dates))
?group_by
group_by(bdays_edt, month_bdays, day_bdays)
bdays_edt <- as.Date(bdays_raw$dates, format = "%m/%d/%y")
head(bdays_edt)
qplot(bdays_edt)
year_bdays <- year(bdays_edt)
month_bdays <- month(bdays_edt)
day_bdays <- day(bdays_edt)
group_by(bdays_edt, month_bdays, day_bdays)
bdays_edt[, .N, by=.(year(dates), month(dates))]
bdays_edt[, N, by=.(year(dates), month(dates))]
bdays_edt[, .N, by=.(year(dates), month(dates))]
bdays_edt[, .N, by=(year(dates), month(dates))]
bdays_edt[, .N, by=.(year(dates), month(dates))]
df <- fread(bdays_edt)
dt[, .N, by=year(dates)]
dt[, .N, by=year(bdays_edt$dates)]
dt[, .N, by=year(bdays_edt)]
# define path name
fileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(fileName)
head(bdays_raw)
str(bdays_raw)
bdays_edt <- as.Date(bdays_raw$dates, format = "%m/%d/%y")
head(bdays_edt)
qplot(bdays_edt)
year_bdays <- year(bdays_edt)
table(format(bdays_edt$dates,"%b-%Y"))
table(format(bdays_edt[dates],"%b-%Y"))
table(format(bdays_edt[[dates]],"%b-%Y"))
table(format(bdays_edt[dates][0],"%b-%Y"))
table(format(bdays_edt[dates],"%b-%Y"))
View(bdays_raw)
table(format(bdays_edt[Date],"%b-%Y"))
table(format(bdays_edt['Date'],"%b-%Y"))
table(format(bdays_edt['Date'],"%m-%y"))
table(format(bdays_raw$dates,"%m-%y"))
bdays_edt
typeof(bdays_edt)
typeof(bdays_edt[0])
typeof(bdays_edt[3])
(bdays_edt[3])
(bdays_edt[1])
bdays_edt$dates <- as.Date(bdays_raw$dates, format = "%m/%d/%y")
View(bdays_edt)
View(bdays_raw)
View(bdays_raw)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw_df <- read.csv(inputFileName)
head(bdays_raw_df)
str(bdays_raw_df)
# typeof dates
typeof(bdays_raw_df)
# typeof dates
typeof(bdays_raw_df[1])
# typeof dates
typeof(bdays_raw_df$dates)
bdays_edt
bdays_edt <- as.Date(bdays_raw_df,format="%m%d%y")
bdays_edt$dates <- as.Date(bdays_raw_df,format="%m%d%y")
bdays_edt <- as.Date(bdays_raw_df,format="%m%d%y")
bdays_edt
View(bdays_raw_df)
View(bdays_raw_df)
str(bdays_raw_df)
names(bdays_raw_df)
typeof(ls())
typeof(get(ls()))
typeof(bdays_raw_df$dates)
View(bdays_raw_df)
View(bdays_raw_df)
bdays_edt$dates <- as.Date(bdays_raw_df$dates,format="%m%d%y")
bdays_edt
bdays_edt$dates <- as.Date(bdays_raw_df$dates,format="%m%d%y")
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
str(bdays_raw)
names(bdays_raw)
typeof(bdays_raw$dates)
bdays_edt$dates <- as.Date(bdays_raw$dates,format="%m%d%y")
bdays_raw$dates
new_dates <- as.Date(bdays_raw$dates,format="%m%d%y")
new_dates
new_dates <- as.Date(bdays_raw$dates,format="%m%d%Y")
new_dates
new_dates <- as.Date(bdays_raw$dates,format="%m%d%Y")
new_dates
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
str(bdays_raw)
names(bdays_raw)
typeof(bdays_raw)
new_dates <- strptime(bdays_raw, "%m-%d-%Y")
new_dates
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
str(bdays_raw)
names(bdays_raw)
typeof(bdays_raw)
new_dates <- as.Date(bdays_raw, "%m-%d-%Y")
new_dates <- as.Date(bdays_raw$dates, "%m-%d-%Y")
new_dates$dates <- as.Date(bdays_raw$dates, "%m-%d-%Y")
View(new_dates)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
cbind(bdays_raw, newColumn = "new_dates")
cbind(bdays_raw, newColumn = as.Date(bdays_raw, "%m/%d/%Y"))
cbind(bdays_raw, newColumn = as.Date(bdays_raw[dates], "%m/%d/%Y"))
cbind(bdays_raw, newColumn = as.Date(bdays_raw[[dates]], "%m/%d/%Y"))
cbind(bdays_raw, newColumn = as.Date(bdays_raw$dates, "%m/%d/%Y"))
View(bdays_raw)
View(bdays_raw)
bdays_edt <- cbind(bdays_raw, newColumn = as.Date(bdays_raw$dates, "%m/%d/%Y"))
View(bdays_edt)
View(bdays_edt)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
View(bdays_edt)
View(bdays_edt)
typeof(bdays_edt[1])
typeof(bdays_edt$datesFormatted)
typeof(bdays_edt$datesFormatted[1])
typeof(bdays_edt$datesFormatted[1][1])
str(bdays_edt)
bdays_edt <- cbind(bdays_edt, by_week = mutate(by_week) = round_date(start_time, unit="week"))
mutate(by_week) = round_date(start_time, unit="week")
mutate(by_week) = round_date(bdays_edt$datesFormatted, unit="week")
mutate(by_week) = round_date(bdays_edt$datesFormatted, unit="week")
mutate(date_by_week) = round_date(bdays_edt$datesFormatted, unit="week")
bdays_edt <- cbind(bdays_edt, date_by_week = '')
mutate(date_by_week = floor_date(start_time, unit="week"))
mutate(date_by_week = floor_date(bdays_edt$datesFormatted, unit="week"))
bdays_edt <- cbind(bdays_edt, date_by_week = bdays_edt$datesFormatted)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
str(bdays_edt)
bdays_edt <- cbind(bdays_edt, date_by_week = bdays_edt$datesFormatted)
mutate(date_by_week = floor_date(date_by_week, unit="week"))
mutate(date_by_week = floor_date(bday_edt$date_by_week, unit="week"))
mutate(date_by_week = floor_date(bdays_edt$date_by_week, unit="week"))
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates,"%m/%d/%Y"))
str(bdays_edt)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates,"%m/%d/%Y"))
warnings()
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
bdays_edt <- cbind(bdays_edt, date_by_week = bdays_edt$datesFormatted)
mutate(date_by_week = floor_date(datesFormatted, unit="week"))
mutate(date_by_week = floor_date(bdays_edt$datesFormatted, unit="week"))
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
View(bdays_edt)
bdays_edt <- cbind(bdays_edt, date_by_week = bdays_edt$datesFormatted)
mutate(date_by_week = round_date(datesFormatted, unit="week"))
mutate(date_by_week = round_date(bdays_edt$datesFormatted, unit="week"))
?mutate()
?mutate()
start_time
date_by_week = round_date(bdays_edt$datesFormatted, unit="week")
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
date_by_week = round_date(bdays_edt$datesFormatted, unit="week")
bdays_edt <- cbind(bdays_edt, date_by_week = date_by_week)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
date_by_week = round_date(bdays_edt$datesFormatted, unit="week")
date_by_week
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
date_by_week = floor_date(bdays_edt$datesFormatted, unit="week")
date_by_week
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
# define path name
inputFileName <- "birthdaysExample.csv"
bdays_raw <- read.csv(inputFileName)
head(bdays_raw)
#bdays_edt <- cbind(bdays_raw, datesFormatted = as.Date(bdays_raw$dates, "%m/%d/%Y"))
bdays_edt <- cbind(bdays_raw, datesFormatted = as.POSIXct(bdays_raw$dates, tz="", format="%m/%d/%Y"))
str(bdays_edt)
date_by_week = floor_date(bdays_edt$datesFormatted, unit="week")
date_by_week
bdays_edt <- cbind(bdays_edt, date_by_week = date_by_week)
count(date_by_week)
count(bdays_edt$date_by_week)
?count()
count(bdays_edt, vars=date_by_week)
bdays_edt <- cbind(bdays_edt, countByWeek = count(bdays_edt, vars=date_by_week))
bdays_per_week <- count(bdays_edt, vars=date_by_week)
bdays_per_week
View(bdays_per_week)
date_by_month = floor_date(bdays_edt$datesFormatted, unit = "month")
bdays_edt <- cbind(bdays_edt, date_by_month =date_by_month)
bdays_per_month <- count(bdays_edt, vars=date_by_month)
View(bdays_per_month)
View(bdays_per_month)
date_by_day = floor_date(bdays_edt$datesFormatted, unit = "day")
bdays_edt <- cbind(bdays_edt, date_by_day =date_by_day)
bdays_per_day <- count(bdays_edt, vars=date_by_day)
View(bdays_per_day)
View(bdays_per_day)
summary(bdays_edt)
summary(bdays_per_month)
?max()
max(bdays_per_month)
max(bdays_per_month$n)
which.max(bdays_per_month$n)
which.max(bdays_per_day$n)
which.max(bdays_per_week$n)
which.max(bdays_per_month$n)
max(bdays_per_day$n)
which.max(bdays_per_day$n)
max(bdays_per_week$n)
which.max(bdays_per_week$n)
max(bdays_per_month$n)
which.max(bdays_per_month$n)
max(bdays_per_day$n)
which.max(bdays_per_day$n)
max(bdays_per_month$n)
which.max(bdays_per_month$n)
summary(bdays_edt)
count(bdays_edt)
View(bdays_edt)
count(bdays_edt$datesFormatted == "0014-01-07")
(bdays_edt$datesFormatted == "0014-01-07")
sum(bdays_edt$datesFormatted == "0014-01-07")
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "Coal Consumption per person (tonnes oil equivalent)", y = "person count", title="Histogram of Coal Consumption per person and per country")
# arrange plots in grid
grid.arrange(plot1, ncol=1)
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time")
# arrange plots in grid
grid.arrange(plot1, ncol=1)
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time") +
scale_x_continuous(breaks = 12)
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time")
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time")
plot2 <- ggplot(bdays_edt, mapping = aes(bdays_edt$date_by_month)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time")
# arrange plots in grid
grid.arrange(plot1, plot2, ncol=1)
# create plots
plot1 <- ggplot(bdays_edt, mapping = aes(bdays_edt$datesFormatted)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs time")
plot2 <- ggplot(bdays_edt, mapping = aes(bdays_edt$date_by_month)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs month")
plot3 <- ggplot(bdays_edt, mapping = aes(bdays_edt$date_by_week)) +
geom_histogram() +
#geom_freqpoly(binwidth = 0.05) +
labs(x = "date", y = "number of birthdays", title="Histogram number of birthdays vs week")
# arrange plots in grid
grid.arrange(plot1, plot2, plot3, ncol=1)
getwd()
getwd()
setwd("/Users/geodev/code/daan-nano/term2/EDA/lesson5/")
getwd()
setwd("/Users/geodev/code/daan-nano/term2/EDA/lesson5/")
